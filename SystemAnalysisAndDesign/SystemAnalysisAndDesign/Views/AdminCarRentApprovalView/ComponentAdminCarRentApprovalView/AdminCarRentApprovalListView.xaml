<UserControl x:Class="SystemAnalysisAndDesign.Views.AdminCarRentApprovalView.ComponentAdminCarRentApprovalView.AdminCarRentApprovalListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:SystemAnalysisAndDesign.Views.AdminCarRentApprovalView.ComponentAdminCarRentApprovalView"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:service="clr-namespace:SystemAnalysisAndDesign.Services"
             xmlns:viewmodel="clr-namespace:SystemAnalysisAndDesign.ViewModels.AdminCarRentApprovalViewModel"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="1020">
    
    <UserControl.Resources>
        <service:IndexConverter x:Key="IndexConverter"/>
        <service:StatusToEnabledConverter x:Key="StatusToEnabledConverter"/>

        <Style x:Key="CenteredHeader" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="CenteredTextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>


        <!-- Style cho nút Approve -->
        <Style x:Key="ApproveButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#63A9E8"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        CornerRadius="35"
                        Opacity="{TemplateBinding Opacity}">
                            <materialDesign:PackIcon Kind="Check"
                                             Width="18"
                                             Height="18"
                                             FontWeight="Bold"
                                             Foreground="White"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#0A63F0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style cho nút Reject -->
        <Style x:Key="RejectButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#F28B82"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        CornerRadius="35"
                        Opacity="{TemplateBinding Opacity}">
                            <materialDesign:PackIcon Kind="Close"
                                             Width="18"
                                             Height="18"
                                             FontWeight="Bold"
                                             Foreground="White"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#D32F2F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Main Content -->
        <Grid Grid.Row="0" Background="{Binding Background, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <DataGrid Name="ApprovalDataGrid"
                      AlternationCount="1000"
                      ItemsSource="{Binding PendingApprovals}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserResizeRows="False"
                      SelectionMode="Single"
                      RowHeight="120"
                      GridLinesVisibility="Horizontal"
                      HorizontalGridLinesBrush="#E0E0E0"
                      AlternatingRowBackground="#FAFBFC"
                      Background="White"
                      BorderThickness="1"
                      BorderBrush="#E0E0E0"
                      HeadersVisibility="Column"                      
                      Margin="0">
                <DataGrid.Columns>

                    <DataGridTemplateColumn Header="#" Width="30" HeaderStyle="{StaticResource CenteredHeader}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=AlternationIndex, Converter={StaticResource IndexConverter}}" 
                           Style="{StaticResource CenteredTextStyle}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <!-- Car Model Column -->
                    <DataGridTemplateColumn Header="Car Model" Width="300" HeaderStyle="{StaticResource CenteredHeader}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,0">
                                        <Border Width="100" Height="70" CornerRadius="8" Background="#F5F5F5" Margin="0,0,15,0">
                                            <Image Source="{Binding Car.ImagePath}" Stretch="UniformToFill"/>
                                        </Border>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock FontWeight="Bold" FontSize="14">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0} {1}">
                                                        <Binding Path="Car.Brand"/>
                                                        <Binding Path="Car.Model"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <TextBlock Text="{Binding Car.CarType}" FontSize="13" Foreground="#666" Margin="1"/>
                                            <TextBlock Text="{Binding Car.LicensePlate}" FontSize="13" Foreground="#888" Margin="1"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <!-- Customer Column -->
                    <DataGridTemplateColumn Header="Customer" Width="*" HeaderStyle="{StaticResource CenteredHeader}">
                        <DataGridTemplateColumn.CellTemplate>                            
                            <DataTemplate>
                                <StackPanel Margin="10" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding Customer.FullName}" FontWeight="Bold" FontSize="14"/>
                                    <TextBlock Text="{Binding Customer.Email}" FontSize="13" Foreground="#666" Margin="1"/>
                                    <TextBlock Text="{Binding Customer.Phone}" FontSize="13" Foreground="#666" Margin="1"/>
                                    <TextBlock Text="{Binding Customer.DriverLicense}" FontSize="13" Foreground="#666" Margin="1"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Pickup Date Column -->
                    <DataGridTextColumn Header="Pickup Date" Width="140"
                    Binding="{Binding PickUpDate, StringFormat='dd/MM/yyyy HH:mm'}"
                    HeaderStyle="{StaticResource CenteredHeader}" FontSize="13" Foreground="#666">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Dropoff Date Column -->
                    <DataGridTextColumn Header="Dropoff Date" Width="140"
                    Binding="{Binding DropOffDate, StringFormat='dd/MM/yyyy HH:mm'}"
                    HeaderStyle="{StaticResource CenteredHeader}" FontSize="13" Foreground="#666">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- TotalAmount Column -->
                    <DataGridTextColumn Header="Total ($)" Width="90"
                    Binding="{Binding TotalAmount, StringFormat='{}{0:C}'}"
                    HeaderStyle="{StaticResource CenteredHeader}" FontSize="13" Foreground="#666">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Rental Status Column -->
                    <DataGridTextColumn Header="Status" Width="90"
                    Binding="{Binding RentalStatus}"
                    HeaderStyle="{StaticResource CenteredHeader}" FontSize="13" Foreground="#666">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Action Buttons Column -->
                    <DataGridTemplateColumn Header="Action" Width="160" HeaderStyle="{StaticResource CenteredHeader}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RentalStatus}" Value="waiting">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <Button Style="{StaticResource ApproveButtonStyle}" 
                        Command="{Binding DataContext.ApproveCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                        CommandParameter="{Binding}" Focusable="False"/>

                                    <Button Style="{StaticResource RejectButtonStyle}" 
                        Command="{Binding DataContext.RejectCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                        CommandParameter="{Binding}" Focusable="False"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
